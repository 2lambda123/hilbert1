
# /Users/gogo/dev/github.com/hilbert/src/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'E0FA98E23B29AEED8B2111752F2F940C'
    
_lr_action_items = {'(':([0,1,2,3,5,8,10,13,17,18,19,21,22,23,24,25,45,],[1,1,16,17,19,20,1,27,1,1,1,1,1,1,1,1,1,]),'FUNC_VAR':([0,1,10,17,18,19,21,22,23,24,25,45,],[2,13,13,13,13,13,13,13,13,13,13,13,]),'+':([4,6,9,11,12,14,15,26,28,31,32,33,35,36,37,38,39,41,43,44,46,47,],[-17,-16,24,-7,-18,24,-17,-14,-15,24,24,24,-11,24,-10,-9,-12,-3,-4,-6,-5,24,]),'INTE_SYM':([0,1,10,17,18,19,21,22,23,24,25,45,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'VAR':([0,1,10,16,17,18,19,20,21,22,23,24,25,45,],[4,15,15,29,15,15,15,34,15,15,15,15,15,15,]),'DIFF_SYM':([0,1,10,17,18,19,21,22,23,24,25,45,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'-':([0,1,4,6,9,10,11,12,14,15,17,18,19,21,22,23,24,25,26,28,31,32,33,35,36,37,38,39,41,43,44,45,46,47,],[10,10,-17,-16,23,10,-7,-18,23,-17,10,10,10,10,10,10,10,10,-14,-15,23,23,23,-11,23,-10,-9,-12,-3,-4,-6,10,-5,23,]),'INTE_D_DYM':([6,11,12,15,26,28,31,35,36,37,38,39,41,43,44,46,],[-16,-7,-18,-17,-14,-15,42,-11,-13,-10,-9,-12,-3,-4,-6,-5,]),')':([6,11,12,14,15,26,28,29,30,33,34,35,36,37,38,39,41,42,43,44,46,],[-16,-7,-18,28,-17,-14,-15,40,41,43,44,-11,-13,-10,-9,-12,-3,46,-4,-6,-5,]),'NUMBER':([0,1,10,16,17,18,19,21,22,23,24,25,27,45,],[6,6,6,30,6,6,6,6,6,6,6,6,30,6,]),'*':([4,6,9,11,12,14,15,26,28,31,32,33,35,36,37,38,39,41,43,44,46,47,],[-17,-16,21,-7,-18,21,-17,-14,-15,21,21,21,-11,21,21,21,-12,-3,-4,-6,-5,21,]),'$end':([4,6,7,9,11,12,15,26,28,32,35,36,37,38,39,41,43,44,46,47,],[-17,-16,0,-8,-7,-18,-17,-14,-15,-1,-11,-13,-10,-9,-12,-3,-4,-6,-5,-2,]),'BUILD_IN_FUNC':([0,1,10,17,18,19,21,22,23,24,25,45,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'CONSTANTS':([0,1,10,17,18,19,21,22,23,24,25,45,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'^':([4,6,9,11,12,14,15,26,28,31,32,33,35,36,37,38,39,41,43,44,46,47,],[-17,-16,22,-7,-18,22,-17,-14,-15,22,22,22,-11,22,-10,-9,-12,-3,-4,-6,-5,22,]),'VAR_MULTI':([0,1,10,17,18,19,21,22,23,24,25,45,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'/':([4,6,9,11,12,14,15,26,28,31,32,33,35,36,37,38,39,41,43,44,46,47,],[-17,-16,25,-7,-18,25,-17,-14,-15,25,25,25,-11,25,25,25,-12,-3,-4,-6,-5,25,]),'=':([4,40,],[18,45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,10,17,18,19,21,22,23,24,25,45,],[9,14,26,31,32,33,35,36,37,38,39,47,]),'statement':([0,],[7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VAR = expression','statement',3,'p_statement_assign','h_parser.py',21),
  ('statement -> FUNC_VAR ( VAR ) = expression','statement',6,'p_statement_def_func','h_parser.py',25),
  ('expression -> FUNC_VAR ( NUMBER )','expression',4,'p_statement_eval_func','h_parser.py',29),
  ('expression -> DIFF_SYM ( expression )','expression',4,'p_expression_diff_func','h_parser.py',34),
  ('expression -> INTE_SYM ( expression INTE_D_DYM )','expression',5,'p_expression_inte_func','h_parser.py',38),
  ('expression -> BUILD_IN_FUNC ( VAR )','expression',4,'p_expression_build_in_func','h_parser.py',43),
  ('expression -> CONSTANTS','expression',1,'p_expression_constants','h_parser.py',48),
  ('statement -> expression','statement',1,'p_statement_expr','h_parser.py',52),
  ('expression -> expression + expression','expression',3,'p_expression_binop','h_parser.py',56),
  ('expression -> expression - expression','expression',3,'p_expression_binop','h_parser.py',57),
  ('expression -> expression * expression','expression',3,'p_expression_binop','h_parser.py',58),
  ('expression -> expression / expression','expression',3,'p_expression_binop','h_parser.py',59),
  ('expression -> expression ^ expression','expression',3,'p_expression_binop','h_parser.py',60),
  ('expression -> - expression','expression',2,'p_expression_uminus','h_parser.py',68),
  ('expression -> ( expression )','expression',3,'p_expression_group','h_parser.py',72),
  ('expression -> NUMBER','expression',1,'p_expression_number','h_parser.py',76),
  ('expression -> VAR','expression',1,'p_expression_var','h_parser.py',80),
  ('expression -> VAR_MULTI','expression',1,'p_expression_var_multi','h_parser.py',84),
]
