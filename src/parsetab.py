
# /Users/gogo/dev/github.com/hilbert/src/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '76084D8F79B29809BFC7D6D0AFF0BAB3'
    
_lr_action_items = {'d':([0,3,7,8,9,11,14,15,19,20,21,22,23,24,25,26,27,28,30,35,39,40,41,42,43,47,49,54,55,60,62,64,67,],[1,-20,1,1,-21,-12,29,1,-22,-18,1,1,1,1,1,-23,1,1,45,-19,-16,-14,-15,-13,-17,-8,-7,-11,1,1,1,-10,-9,]),'S':([0,7,8,15,21,22,23,24,25,27,28,55,60,62,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'/':([1,3,9,10,11,13,17,19,20,26,30,35,37,38,39,40,41,42,43,47,49,54,63,64,65,66,67,],[14,-20,-21,-22,-12,23,23,-22,-18,-23,23,-19,23,23,-16,23,-15,23,23,-8,-7,-11,23,-10,23,23,-9,]),'$end':([3,4,5,6,9,10,11,13,19,20,26,35,37,39,40,41,42,43,47,49,54,64,65,66,67,],[-20,-2,-6,0,-21,-22,-12,-5,-22,-18,-23,-19,-1,-16,-14,-15,-13,-17,-8,-7,-11,-10,-4,-3,-9,]),'=':([10,51,53,],[21,60,62,]),'+':([3,9,10,11,13,17,19,20,26,30,35,37,38,39,40,41,42,43,47,49,54,63,64,65,66,67,],[-20,-21,-22,-12,27,27,-22,-18,-23,27,-19,27,27,-16,-14,-15,-13,27,-8,-7,-11,27,-10,27,27,-9,]),'FUNC_VAR':([0,7,8,15,21,22,23,24,25,27,28,55,60,62,],[5,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'^':([3,9,10,11,13,17,19,20,26,30,35,37,38,39,40,41,42,43,47,49,54,63,64,65,66,67,],[-20,-21,-22,-12,28,28,-22,-18,-23,28,-19,28,28,-16,-14,-15,-13,28,-8,-7,-11,28,-10,28,28,-9,]),'e':([0,7,8,15,21,22,23,24,25,27,28,55,60,62,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),',':([31,32,33,34,57,58,59,61,],[46,48,50,52,-27,-26,-25,-24,]),'(':([0,2,5,7,8,12,15,18,21,22,23,24,25,27,28,44,55,60,62,],[7,15,16,7,7,22,7,36,7,7,7,7,7,7,7,55,7,7,7,]),'-':([0,3,7,8,9,10,11,13,15,17,19,20,21,22,23,24,25,26,27,28,30,35,37,38,39,40,41,42,43,47,49,54,55,60,62,63,64,65,66,67,],[8,-20,8,8,-21,-22,-12,24,8,24,-22,-18,8,8,8,8,8,-23,8,8,24,-19,24,24,-16,-14,-15,-13,24,-8,-7,-11,8,8,8,24,-10,24,24,-9,]),'NUMBER':([0,7,8,15,16,21,22,23,24,25,27,28,36,46,48,55,60,62,],[3,3,3,3,32,3,3,3,3,3,3,3,32,57,58,3,3,3,]),'*':([3,9,10,11,13,17,19,20,26,30,35,37,38,39,40,41,42,43,47,49,54,63,64,65,66,67,],[-20,-21,-22,-12,25,25,-22,-18,-23,25,-19,25,25,-16,25,-15,25,25,-8,-7,-11,25,-10,25,25,-9,]),'VAR':([0,3,7,8,9,10,11,13,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,35,37,38,39,40,41,42,43,45,47,49,50,52,54,55,60,62,63,64,65,66,67,],[10,-20,19,19,-21,-22,-12,26,19,34,26,-22,-18,19,19,19,19,19,-23,19,19,44,26,-19,26,26,-16,-14,-15,-13,26,56,-8,-7,59,61,-11,19,19,19,26,-10,26,26,-9,]),')':([3,9,11,17,19,20,26,31,32,33,34,35,38,39,40,41,42,43,47,49,54,56,57,58,59,61,63,64,67,],[-20,-21,-12,35,-22,-18,-23,47,49,51,53,-19,54,-16,-14,-15,-13,-17,-8,-7,-11,64,-27,-26,-25,-24,67,-10,-9,]),'CONSTANTS':([0,7,8,15,21,22,23,24,25,27,28,55,60,62,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'BUILD_IN_FUNC':([0,7,8,15,21,22,23,24,25,27,28,55,60,62,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[6,]),'expression':([0,],[4,]),'term':([0,7,8,15,21,22,23,24,25,27,28,55,60,62,],[13,17,20,30,37,38,39,40,41,42,43,63,65,66,]),'nums_with_cln':([16,36,],[31,31,]),'vars_with_cln':([16,],[33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VAR = term','statement',3,'p_statement_assign','h_parser.py',22),
  ('statement -> expression','statement',1,'p_statement_expr','h_parser.py',26),
  ('statement -> FUNC_VAR ( VAR ) = term','statement',6,'p_statement_def_func','h_parser.py',33),
  ('statement -> FUNC_VAR ( vars_with_cln ) = term','statement',6,'p_statement_def_func','h_parser.py',34),
  ('expression -> term','expression',1,'p_expression_term','h_parser.py',42),
  ('expression -> FUNC_VAR','expression',1,'p_expression_func','h_parser.py',46),
  ('term -> FUNC_VAR ( NUMBER )','term',4,'p_statement_eval_func','h_parser.py',50),
  ('term -> FUNC_VAR ( nums_with_cln )','term',4,'p_statement_eval_func','h_parser.py',51),
  ('term -> d / d VAR ( term )','term',7,'p_expression_diff_func','h_parser.py',60),
  ('term -> S ( term d VAR )','term',6,'p_expression_inte_func','h_parser.py',64),
  ('term -> BUILD_IN_FUNC ( term )','term',4,'p_expression_build_in_func','h_parser.py',68),
  ('term -> CONSTANTS','term',1,'p_expression_constants','h_parser.py',72),
  ('term -> term + term','term',3,'p_expression_binop','h_parser.py',76),
  ('term -> term - term','term',3,'p_expression_binop','h_parser.py',77),
  ('term -> term * term','term',3,'p_expression_binop','h_parser.py',78),
  ('term -> term / term','term',3,'p_expression_binop','h_parser.py',79),
  ('term -> term ^ term','term',3,'p_expression_binop','h_parser.py',80),
  ('term -> - term','term',2,'p_expression_uminus','h_parser.py',88),
  ('term -> ( term )','term',3,'p_expression_group','h_parser.py',92),
  ('term -> NUMBER','term',1,'p_term_number','h_parser.py',96),
  ('term -> e','term',1,'p_term_exponential','h_parser.py',100),
  ('term -> VAR','term',1,'p_term_var','h_parser.py',104),
  ('term -> term VAR','term',2,'p_term_var_multi','h_parser.py',108),
  ('vars_with_cln -> VAR , VAR','vars_with_cln',3,'p_expression_vars_with_cln','h_parser.py',112),
  ('vars_with_cln -> vars_with_cln , VAR','vars_with_cln',3,'p_expression_vars_with_cln','h_parser.py',113),
  ('nums_with_cln -> NUMBER , NUMBER','nums_with_cln',3,'p_expression_num_with_cln','h_parser.py',121),
  ('nums_with_cln -> nums_with_cln , NUMBER','nums_with_cln',3,'p_expression_num_with_cln','h_parser.py',122),
]
