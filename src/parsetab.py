
# /Users/gogo/dev/github.com/hilbert/src/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'CBB8564CF3A94BD75436FB8E8373F236'
    
_lr_action_items = {'VAR_MULTI':([0,5,11,13,17,18,20,21,22,23,24,44,],[1,1,1,1,1,1,1,1,1,1,1,1,]),')':([1,7,15,16,25,26,27,30,31,33,34,35,36,37,38,39,41,42,43,45,],[-17,-15,-16,30,-13,39,40,-14,41,43,-12,-8,-10,-11,-9,-3,-4,45,-6,-5,]),'FUNC_VAR':([0,5,11,13,17,18,20,21,22,23,24,44,],[3,14,14,14,14,14,14,14,14,14,14,14,]),'$end':([1,2,4,7,10,15,25,28,30,34,35,36,37,38,39,41,43,45,46,],[-17,0,-16,-15,-7,-16,-13,-1,-14,-12,-8,-10,-11,-9,-3,-4,-6,-5,-2,]),'DIFF_SYM':([0,5,11,13,17,18,20,21,22,23,24,44,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'/':([1,4,7,10,15,16,25,28,30,31,32,34,35,36,37,38,39,41,43,45,46,],[-17,-16,-15,23,-16,23,-13,23,-14,23,23,23,23,-10,-11,23,-3,-4,-6,-5,23,]),'+':([1,4,7,10,15,16,25,28,30,31,32,34,35,36,37,38,39,41,43,45,46,],[-17,-16,-15,21,-16,21,-13,21,-14,21,21,21,-8,-10,-11,-9,-3,-4,-6,-5,21,]),'BUILD_IN_FUNC':([0,5,11,13,17,18,20,21,22,23,24,44,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'^':([1,4,7,10,15,16,25,28,30,31,32,34,35,36,37,38,39,41,43,45,46,],[-17,-16,-15,20,-16,20,-13,20,-14,20,20,20,-8,-10,-11,-9,-3,-4,-6,-5,20,]),'(':([0,3,5,6,8,9,11,13,14,17,18,20,21,22,23,24,44,],[5,12,5,17,18,19,5,5,29,5,5,5,5,5,5,5,5,]),'VAR':([0,5,11,12,13,17,18,19,20,21,22,23,24,44,],[4,15,15,27,15,15,15,33,15,15,15,15,15,15,]),'NUMBER':([0,5,11,12,13,17,18,20,21,22,23,24,29,44,],[7,7,7,26,7,7,7,7,7,7,7,7,26,7,]),'INTE_SYM':([0,5,11,13,17,18,20,21,22,23,24,44,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'*':([1,4,7,10,15,16,25,28,30,31,32,34,35,36,37,38,39,41,43,45,46,],[-17,-16,-15,22,-16,22,-13,22,-14,22,22,22,22,-10,-11,22,-3,-4,-6,-5,22,]),'=':([4,40,],[13,44,]),'-':([0,1,4,5,7,10,11,13,15,16,17,18,20,21,22,23,24,25,28,30,31,32,34,35,36,37,38,39,41,43,44,45,46,],[11,-17,-16,11,-15,24,11,11,-16,24,11,11,11,11,11,11,11,-13,24,-14,24,24,24,-8,-10,-11,-9,-3,-4,-6,11,-5,24,]),'INTE_D_DYM':([1,7,15,25,30,32,34,35,36,37,38,39,41,43,45,],[-17,-15,-16,-13,-14,42,-12,-8,-10,-11,-9,-3,-4,-6,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,5,11,13,17,18,20,21,22,23,24,44,],[10,16,25,28,31,32,34,35,36,37,38,46,]),'statement':([0,],[2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VAR = expression','statement',3,'p_statement_assign','h_parser.py',21),
  ('statement -> FUNC_VAR ( VAR ) = expression','statement',6,'p_statement_def_func','h_parser.py',25),
  ('expression -> FUNC_VAR ( NUMBER )','expression',4,'p_statement_eval_func','h_parser.py',29),
  ('expression -> DIFF_SYM ( expression )','expression',4,'p_expression_diff_func','h_parser.py',34),
  ('expression -> INTE_SYM ( expression INTE_D_DYM )','expression',5,'p_expression_inte_func','h_parser.py',38),
  ('expression -> BUILD_IN_FUNC ( VAR )','expression',4,'p_expression_build_in_func','h_parser.py',43),
  ('statement -> expression','statement',1,'p_statement_expr','h_parser.py',47),
  ('expression -> expression + expression','expression',3,'p_expression_binop','h_parser.py',51),
  ('expression -> expression - expression','expression',3,'p_expression_binop','h_parser.py',52),
  ('expression -> expression * expression','expression',3,'p_expression_binop','h_parser.py',53),
  ('expression -> expression / expression','expression',3,'p_expression_binop','h_parser.py',54),
  ('expression -> expression ^ expression','expression',3,'p_expression_binop','h_parser.py',55),
  ('expression -> - expression','expression',2,'p_expression_uminus','h_parser.py',63),
  ('expression -> ( expression )','expression',3,'p_expression_group','h_parser.py',67),
  ('expression -> NUMBER','expression',1,'p_expression_number','h_parser.py',71),
  ('expression -> VAR','expression',1,'p_expression_var','h_parser.py',75),
  ('expression -> VAR_MULTI','expression',1,'p_expression_var_multi','h_parser.py',79),
]
