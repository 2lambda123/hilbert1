
# /Users/gogo/dev/github.com/hilbert/src/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'CEDB71384E1F4FA85055E1D30A597671'
    
_lr_action_items = {'LIMIT_SYM':([0,8,14,15,16,17,18,19,21,22,26,28,47,60,62,66,73,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'CONSTANTS':([0,8,14,15,16,17,18,19,21,22,26,28,47,60,62,66,73,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'d':([0,3,7,8,9,14,15,16,17,18,19,20,21,22,24,26,27,28,30,31,32,33,34,35,38,42,47,48,53,56,60,62,66,70,73,74,76,],[11,-12,-20,11,-21,11,11,11,11,11,11,-23,11,11,-22,11,41,11,-18,-16,-17,-14,-15,-13,-19,50,11,-11,-8,-7,11,11,11,-10,11,-9,-24,]),'=':([4,51,57,],[22,62,66,]),']':([3,7,9,20,24,30,31,32,33,34,35,38,48,53,56,59,70,74,76,],[-12,-20,-21,-23,-22,-18,-16,-17,-14,-15,-13,-19,-11,-8,-7,68,-10,-9,-24,]),'NUMBER':([0,8,14,15,16,17,18,19,21,22,26,28,29,39,47,54,55,60,62,66,73,],[7,7,7,7,7,7,7,7,7,7,7,7,45,45,7,64,65,7,7,7,7,]),'(':([0,8,10,12,13,14,15,16,17,18,19,21,22,25,26,28,47,49,60,62,66,68,73,],[8,8,26,28,29,8,8,8,8,8,8,8,8,39,8,8,8,60,8,8,8,73,8,]),'e':([0,8,14,15,16,17,18,19,21,22,26,28,47,60,62,66,73,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'^':([1,3,4,7,9,20,23,24,30,31,32,33,34,35,36,37,38,40,42,48,53,56,59,69,70,71,72,74,75,76,],[16,-12,-22,-20,-21,-23,16,-22,-18,-16,16,-14,-15,-13,16,16,-19,16,16,-11,-8,-7,16,16,-10,16,16,-9,16,-24,]),'-':([0,1,3,4,7,8,9,14,15,16,17,18,19,20,21,22,23,24,26,28,30,31,32,33,34,35,36,37,38,40,42,47,48,53,56,59,60,62,66,69,70,71,72,73,74,75,76,],[14,17,-12,-22,-20,14,-21,14,14,14,14,14,14,-23,14,14,17,-22,14,14,-18,-16,17,-14,-15,-13,17,17,-19,17,17,14,-11,-8,-7,17,14,14,14,17,-10,17,17,14,-9,17,-24,]),'BUILD_IN_FUNC':([0,8,14,15,16,17,18,19,21,22,26,28,47,60,62,66,73,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),')':([3,7,9,20,23,24,30,31,32,33,34,35,38,40,43,44,45,46,48,53,56,61,63,64,65,67,69,70,74,75,76,],[-12,-20,-21,-23,38,-22,-18,-16,-17,-14,-15,-13,-19,48,51,53,56,57,-11,-8,-7,70,-26,-28,-27,-25,74,-10,-9,76,-24,]),'$end':([1,3,4,5,6,7,9,13,20,24,30,31,32,33,34,35,37,38,48,53,56,70,71,72,74,76,],[-5,-12,-22,-2,0,-20,-21,-6,-23,-22,-18,-16,-17,-14,-15,-13,-1,-19,-11,-8,-7,-10,-4,-3,-9,-24,]),'*':([1,3,4,7,9,20,23,24,30,31,32,33,34,35,36,37,38,40,42,48,53,56,59,69,70,71,72,74,75,76,],[18,-12,-22,-20,-21,-23,18,-22,-18,-16,18,18,-15,18,18,18,-19,18,18,-11,-8,-7,18,18,-10,18,18,-9,18,-24,]),'VAR':([0,1,3,4,7,8,9,14,15,16,17,18,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,47,48,50,52,53,56,58,59,60,62,66,69,70,71,72,73,74,75,76,],[4,20,-12,-22,-20,24,-21,24,24,24,24,24,24,-23,24,24,20,-22,24,24,46,-18,-16,20,-14,-15,-13,20,20,-19,20,49,20,24,-11,61,63,-8,-7,67,20,24,24,24,20,-10,20,20,24,-9,20,-24,]),'/':([1,3,4,7,9,11,20,23,24,30,31,32,33,34,35,36,37,38,40,42,48,53,56,59,69,70,71,72,74,75,76,],[15,-12,-22,-20,-21,27,-23,15,-22,-18,-16,15,15,-15,15,15,15,-19,15,15,-11,-8,-7,15,15,-10,15,15,-9,15,-24,]),'S':([0,8,14,15,16,17,18,19,21,22,26,28,47,60,62,66,73,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'FUNC_VAR':([0,8,14,15,16,17,18,19,21,22,26,28,47,60,62,66,73,],[13,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'R_ARROW':([3,7,9,20,24,30,31,32,33,34,35,36,38,48,53,56,70,74,76,],[-12,-20,-21,-23,-22,-18,-16,-17,-14,-15,-13,47,-19,-11,-8,-7,-10,-9,-24,]),'+':([1,3,4,7,9,20,23,24,30,31,32,33,34,35,36,37,38,40,42,48,53,56,59,69,70,71,72,74,75,76,],[19,-12,-22,-20,-21,-23,19,-22,-18,-16,19,-14,-15,-13,19,19,-19,19,19,-11,-8,-7,19,19,-10,19,19,-9,19,-24,]),',':([43,44,45,46,63,64,65,67,],[52,54,55,58,-26,-28,-27,-25,]),'[':([2,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[5,]),'vars_with_cln':([29,],[43,]),'term':([0,8,14,15,16,17,18,19,21,22,26,28,47,60,62,66,73,],[1,23,30,31,32,33,34,35,36,37,40,42,59,69,71,72,75,]),'nums_with_cln':([29,39,],[44,44,]),'statement':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VAR = term','statement',3,'p_statement_assign','h_parser.py',22),
  ('statement -> expression','statement',1,'p_statement_expr','h_parser.py',26),
  ('statement -> FUNC_VAR ( VAR ) = term','statement',6,'p_statement_def_func','h_parser.py',36),
  ('statement -> FUNC_VAR ( vars_with_cln ) = term','statement',6,'p_statement_def_func','h_parser.py',37),
  ('expression -> term','expression',1,'p_expression_term','h_parser.py',45),
  ('expression -> FUNC_VAR','expression',1,'p_expression_func','h_parser.py',49),
  ('term -> FUNC_VAR ( NUMBER )','term',4,'p_statement_eval_func','h_parser.py',53),
  ('term -> FUNC_VAR ( nums_with_cln )','term',4,'p_statement_eval_func','h_parser.py',54),
  ('term -> d / d VAR ( term )','term',7,'p_expression_diff_func','h_parser.py',63),
  ('term -> S ( term d VAR )','term',6,'p_expression_inte_func','h_parser.py',67),
  ('term -> BUILD_IN_FUNC ( term )','term',4,'p_expression_build_in_func','h_parser.py',71),
  ('term -> CONSTANTS','term',1,'p_expression_constants','h_parser.py',75),
  ('term -> term + term','term',3,'p_expression_binop','h_parser.py',79),
  ('term -> term - term','term',3,'p_expression_binop','h_parser.py',80),
  ('term -> term * term','term',3,'p_expression_binop','h_parser.py',81),
  ('term -> term / term','term',3,'p_expression_binop','h_parser.py',82),
  ('term -> term ^ term','term',3,'p_expression_binop','h_parser.py',83),
  ('term -> - term','term',2,'p_expression_uminus','h_parser.py',91),
  ('term -> ( term )','term',3,'p_expression_group','h_parser.py',95),
  ('term -> NUMBER','term',1,'p_term_number','h_parser.py',99),
  ('term -> e','term',1,'p_term_exponential','h_parser.py',103),
  ('term -> VAR','term',1,'p_term_var','h_parser.py',107),
  ('term -> term VAR','term',2,'p_term_var_multi','h_parser.py',111),
  ('term -> LIMIT_SYM [ term R_ARROW term ] ( term )','term',9,'p_term_limit','h_parser.py',115),
  ('vars_with_cln -> VAR , VAR','vars_with_cln',3,'p_expression_vars_with_cln','h_parser.py',119),
  ('vars_with_cln -> vars_with_cln , VAR','vars_with_cln',3,'p_expression_vars_with_cln','h_parser.py',120),
  ('nums_with_cln -> NUMBER , NUMBER','nums_with_cln',3,'p_expression_num_with_cln','h_parser.py',128),
  ('nums_with_cln -> nums_with_cln , NUMBER','nums_with_cln',3,'p_expression_num_with_cln','h_parser.py',129),
]
