
# /Users/gogo/dev/remote/github/Hilbert/core/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'D9973DE83019698FCC566FF859683504'
    
_lr_action_items = {'(':([0,1,2,3,5,11,13,15,16,17,18,19,21,36,],[1,1,13,1,20,23,1,1,1,1,1,1,1,1,]),'+':([4,7,8,9,10,12,14,22,24,25,26,27,28,29,32,33,35,37,],[15,-14,-15,-13,15,-14,-11,-12,15,-6,15,-8,-7,-9,15,-4,-3,15,]),'NUMBER':([0,1,3,13,15,16,17,18,19,20,21,23,36,],[9,9,9,9,9,9,9,9,9,31,9,31,9,]),'DIFF_SYM':([0,1,3,13,15,16,17,18,19,21,36,],[2,2,2,2,2,2,2,2,2,2,2,]),'$end':([4,6,7,8,9,12,14,22,25,26,27,28,29,32,33,35,37,],[-5,0,-14,-15,-13,-14,-11,-12,-6,-10,-8,-7,-9,-1,-4,-3,-2,]),'-':([0,1,3,4,7,8,9,10,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,32,33,35,36,37,],[3,3,3,18,-14,-15,-13,18,-14,3,-11,3,3,3,3,3,3,-12,18,-6,18,-8,-7,-9,18,-4,-3,3,18,]),')':([8,9,10,12,14,22,24,25,26,27,28,29,30,31,33,35,],[-15,-13,22,-14,-11,-12,33,-6,-10,-8,-7,-9,34,35,-4,-3,]),'^':([4,7,8,9,10,12,14,22,24,25,26,27,28,29,32,33,35,37,],[16,-14,-15,-13,16,-14,-11,-12,16,-6,16,-8,-7,-9,16,-4,-3,16,]),'*':([4,7,8,9,10,12,14,22,24,25,26,27,28,29,32,33,35,37,],[17,-14,-15,-13,17,-14,-11,-12,17,17,17,-8,17,-9,17,-4,-3,17,]),'/':([4,7,8,9,10,12,14,22,24,25,26,27,28,29,32,33,35,37,],[19,-14,-15,-13,19,-14,-11,-12,19,19,19,-8,19,-9,19,-4,-3,19,]),'FUNC_VAR':([0,1,3,13,15,16,17,18,19,21,36,],[5,11,11,11,11,11,11,11,11,11,11,]),'VAR':([0,1,3,13,15,16,17,18,19,20,21,36,],[7,12,12,12,12,12,12,12,12,30,12,12,]),'VAR_MULTI':([0,1,3,13,15,16,17,18,19,21,36,],[8,8,8,8,8,8,8,8,8,8,8,]),'=':([7,34,],[21,36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[6,]),'expression':([0,1,3,13,15,16,17,18,19,21,36,],[4,10,14,24,25,26,27,28,29,32,37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VAR = expression','statement',3,'p_statement_assign','h_parser.py',21),
  ('statement -> FUNC_VAR ( VAR ) = expression','statement',6,'p_statement_def_func','h_parser.py',25),
  ('expression -> FUNC_VAR ( NUMBER )','expression',4,'p_statement_eval_func','h_parser.py',29),
  ('expression -> DIFF_SYM ( expression )','expression',4,'p_expression_diff_func','h_parser.py',34),
  ('statement -> expression','statement',1,'p_statement_expr','h_parser.py',38),
  ('expression -> expression + expression','expression',3,'p_expression_binop','h_parser.py',42),
  ('expression -> expression - expression','expression',3,'p_expression_binop','h_parser.py',43),
  ('expression -> expression * expression','expression',3,'p_expression_binop','h_parser.py',44),
  ('expression -> expression / expression','expression',3,'p_expression_binop','h_parser.py',45),
  ('expression -> expression ^ expression','expression',3,'p_expression_binop','h_parser.py',46),
  ('expression -> - expression','expression',2,'p_expression_uminus','h_parser.py',54),
  ('expression -> ( expression )','expression',3,'p_expression_group','h_parser.py',58),
  ('expression -> NUMBER','expression',1,'p_expression_number','h_parser.py',62),
  ('expression -> VAR','expression',1,'p_expression_var','h_parser.py',66),
  ('expression -> VAR_MULTI','expression',1,'p_expression_var_multi','h_parser.py',70),
]
