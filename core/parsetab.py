
# /Users/gogo/dev/remote/github/Hilbert/core/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '0C40FED92530D969967174B952151115'
    
_lr_action_items = {'BUILD_IN_FUNC':([0,3,8,12,13,17,20,21,22,23,24,25,45,],[1,1,1,1,1,1,1,1,1,1,1,1,1,]),'INTE_D_DYM':([5,10,14,19,29,30,33,34,35,36,37,39,42,43,44,],[-17,-15,-16,-13,-14,40,-11,-12,-8,-10,-9,-6,-3,-4,-5,]),')':([5,10,14,16,19,26,29,31,32,33,34,35,36,37,38,39,40,42,43,44,],[-17,-15,-16,29,-13,39,-14,41,42,-11,-12,-8,-10,-9,43,-6,44,-3,-4,-5,]),'+':([2,5,9,10,14,16,19,26,27,29,30,33,34,35,36,37,38,39,42,43,44,46,],[-16,-17,22,-15,-16,22,-13,22,22,-14,22,-11,22,-8,-10,-9,22,-6,-3,-4,-5,22,]),'VAR':([0,3,8,12,13,17,18,20,21,22,23,24,25,45,],[2,14,14,14,14,14,31,14,14,14,14,14,14,14,]),'(':([0,1,3,6,7,8,11,12,13,15,17,20,21,22,23,24,25,45,],[3,12,3,17,18,3,25,3,3,28,3,3,3,3,3,3,3,3,]),'$end':([2,4,5,9,10,14,19,27,29,33,34,35,36,37,39,42,43,44,46,],[-16,0,-17,-7,-15,-16,-13,-1,-14,-11,-12,-8,-10,-9,-6,-3,-4,-5,-2,]),'VAR_MULTI':([0,3,8,12,13,17,20,21,22,23,24,25,45,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'INTE_SYM':([0,3,8,12,13,17,20,21,22,23,24,25,45,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'=':([2,41,],[13,45,]),'FUNC_VAR':([0,3,8,12,13,17,20,21,22,23,24,25,45,],[7,15,15,15,15,15,15,15,15,15,15,15,15,]),'/':([2,5,9,10,14,16,19,26,27,29,30,33,34,35,36,37,38,39,42,43,44,46,],[-16,-17,20,-15,-16,20,-13,20,20,-14,20,-11,20,20,-10,20,20,-6,-3,-4,-5,20,]),'*':([2,5,9,10,14,16,19,26,27,29,30,33,34,35,36,37,38,39,42,43,44,46,],[-16,-17,23,-15,-16,23,-13,23,23,-14,23,-11,23,23,-10,23,23,-6,-3,-4,-5,23,]),'-':([0,2,3,5,8,9,10,12,13,14,16,17,19,20,21,22,23,24,25,26,27,29,30,33,34,35,36,37,38,39,42,43,44,45,46,],[8,-16,8,-17,8,24,-15,8,8,-16,24,8,-13,8,8,8,8,8,8,24,24,-14,24,-11,24,-8,-10,-9,24,-6,-3,-4,-5,8,24,]),'^':([2,5,9,10,14,16,19,26,27,29,30,33,34,35,36,37,38,39,42,43,44,46,],[-16,-17,21,-15,-16,21,-13,21,21,-14,21,-11,21,-8,-10,-9,21,-6,-3,-4,-5,21,]),'NUMBER':([0,3,8,12,13,17,18,20,21,22,23,24,25,28,45,],[10,10,10,10,10,10,32,10,10,10,10,10,10,32,10,]),'DIFF_SYM':([0,3,8,12,13,17,20,21,22,23,24,25,45,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,8,12,13,17,20,21,22,23,24,25,45,],[9,16,19,26,27,30,33,34,35,36,37,38,46,]),'statement':([0,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VAR = expression','statement',3,'p_statement_assign','h_parser.py',21),
  ('statement -> FUNC_VAR ( VAR ) = expression','statement',6,'p_statement_def_func','h_parser.py',25),
  ('expression -> FUNC_VAR ( NUMBER )','expression',4,'p_statement_eval_func','h_parser.py',29),
  ('expression -> DIFF_SYM ( expression )','expression',4,'p_expression_diff_func','h_parser.py',34),
  ('expression -> INTE_SYM ( expression INTE_D_DYM )','expression',5,'p_expression_inte_func','h_parser.py',38),
  ('expression -> BUILD_IN_FUNC ( expression )','expression',4,'p_expression_build_in_func','h_parser.py',43),
  ('statement -> expression','statement',1,'p_statement_expr','h_parser.py',48),
  ('expression -> expression + expression','expression',3,'p_expression_binop','h_parser.py',52),
  ('expression -> expression - expression','expression',3,'p_expression_binop','h_parser.py',53),
  ('expression -> expression * expression','expression',3,'p_expression_binop','h_parser.py',54),
  ('expression -> expression / expression','expression',3,'p_expression_binop','h_parser.py',55),
  ('expression -> expression ^ expression','expression',3,'p_expression_binop','h_parser.py',56),
  ('expression -> - expression','expression',2,'p_expression_uminus','h_parser.py',64),
  ('expression -> ( expression )','expression',3,'p_expression_group','h_parser.py',68),
  ('expression -> NUMBER','expression',1,'p_expression_number','h_parser.py',72),
  ('expression -> VAR','expression',1,'p_expression_var','h_parser.py',76),
  ('expression -> VAR_MULTI','expression',1,'p_expression_var_multi','h_parser.py',80),
]
