
# /Users/gogo/dev/github.com/hilbert/lib/hilbert/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '64074E5F5D12AA65677B88BD5FBBB408'
    
_lr_action_items = {'-':([0,1,2,3,4,6,9,14,15,17,18,19,20,21,22,23,24,25,26,27,31,33,34,35,36,37,38,40,41,42,51,52,58,59,65,66,68,72,73,74,75,77,78,79,80,81,82,83,],[9,9,-22,22,-14,-23,9,22,-23,9,9,-24,9,9,9,9,9,9,9,-20,-21,22,-18,-15,-17,-16,22,22,22,22,9,-13,-7,-8,22,9,9,-10,9,-11,-12,22,22,22,9,-9,22,-25,]),'^':([2,3,4,6,14,15,19,27,31,33,34,35,36,37,38,40,41,42,52,58,59,65,72,74,75,77,78,79,81,82,83,],[-22,17,-14,-23,17,-23,-24,-20,-21,17,-18,-15,-17,-16,17,17,17,17,-13,-7,-8,17,-10,-11,-12,17,17,17,-9,17,-25,]),'/':([2,3,4,6,13,14,15,19,27,29,31,33,34,35,36,37,38,40,41,42,52,58,59,65,72,74,75,77,78,79,81,82,83,],[-22,18,-14,-23,30,18,-23,-24,-20,47,-21,18,-18,18,-17,18,18,18,18,18,-13,-7,-8,18,-10,-11,-12,18,18,18,-9,18,-25,]),'(':([0,1,5,8,9,10,16,17,18,20,21,22,23,24,25,26,39,51,62,66,68,73,76,80,],[1,1,23,26,1,28,32,1,1,1,1,1,1,1,1,1,32,1,73,1,1,1,80,1,]),',':([43,44,45,46,67,69,70,71,],[54,56,57,60,-26,-27,-28,-29,]),'*':([2,3,4,6,14,15,19,27,31,33,34,35,36,37,38,40,41,42,52,58,59,65,72,74,75,77,78,79,81,82,83,],[-22,21,-14,-23,21,-23,-24,-20,-21,21,-18,21,-17,21,21,21,21,21,-13,-7,-8,21,-10,-11,-12,21,21,21,-9,21,-25,]),')':([2,4,14,15,19,27,31,33,34,35,36,37,42,43,44,45,46,52,58,59,63,64,67,69,70,71,72,74,75,79,81,82,83,],[-22,-14,31,-23,-24,-20,-21,-19,-18,-15,-17,-16,52,53,55,58,59,-13,-7,-8,74,75,-26,-27,-28,-29,-10,-11,-12,81,-9,83,-25,]),']':([2,4,15,19,27,31,33,34,35,36,37,52,58,59,65,72,74,75,81,83,],[-22,-14,-23,-24,-20,-21,-19,-18,-15,-17,-16,-13,-7,-8,76,-10,-11,-12,-9,-25,]),'NUMBER':([0,1,9,17,18,20,21,22,23,24,25,26,28,32,51,57,60,66,68,73,80,],[2,2,2,2,2,2,2,2,2,2,2,2,45,45,2,70,71,2,2,2,2,]),'LIMIT_SYM':([0,1,9,17,18,20,21,22,23,24,25,26,51,66,68,73,80,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'[':([7,],[25,]),'BUILD_IN_FUNC':([0,1,9,17,18,20,21,22,23,24,25,26,51,66,68,73,80,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'$end':([2,3,4,6,10,11,12,15,19,27,31,33,34,35,36,37,40,52,58,59,72,74,75,77,78,81,83,],[-22,-5,-14,-23,-6,-1,0,-23,-24,-20,-21,-19,-18,-15,-17,-16,-2,-13,-7,-8,-10,-11,-12,-3,-4,-9,-25,]),'VAR':([0,1,2,3,4,6,9,14,15,17,18,19,20,21,22,23,24,25,26,27,28,31,33,34,35,36,37,38,40,41,42,48,49,50,51,52,54,56,58,59,61,65,66,68,72,73,74,75,77,78,79,80,81,82,83,],[6,15,-22,19,-14,-23,15,19,-23,15,15,-24,15,15,15,15,15,15,15,-20,43,-21,19,-18,-15,-17,-16,19,19,19,19,62,63,64,15,-13,67,69,-7,-8,72,19,15,15,-10,15,-11,-12,19,19,19,15,-9,19,-25,]),'=':([6,53,55,],[24,66,68,]),'d':([0,1,2,4,9,15,17,18,19,20,21,22,23,24,25,26,27,30,31,33,34,35,36,37,38,39,47,51,52,58,59,66,68,72,73,74,75,80,81,83,],[13,13,-22,-14,13,-23,13,13,-24,13,13,13,13,13,13,13,-20,48,-21,-19,-18,-15,-17,-16,49,50,61,13,-13,-7,-8,13,13,-10,13,-11,-12,13,-9,-25,]),'FUNC_VAR':([0,1,9,13,17,18,20,21,22,23,24,25,26,51,66,68,73,80,],[10,16,16,29,16,16,16,16,16,39,16,16,16,16,16,16,16,16,]),'+':([2,3,4,6,14,15,19,27,31,33,34,35,36,37,38,40,41,42,52,58,59,65,72,74,75,77,78,79,81,82,83,],[-22,20,-14,-23,20,-23,-24,-20,-21,20,-18,-15,-17,-16,20,20,20,20,-13,-7,-8,20,-10,-11,-12,20,20,20,-9,20,-25,]),'S':([0,1,9,17,18,20,21,22,23,24,25,26,51,66,68,73,80,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'R_ARROW':([2,4,15,19,27,31,33,34,35,36,37,41,52,58,59,72,74,75,81,83,],[-22,-14,-23,-24,-20,-21,-19,-18,-15,-17,-16,51,-13,-7,-8,-10,-11,-12,-9,-25,]),'CONSTANTS':([0,1,9,17,18,20,21,22,23,24,25,26,51,66,68,73,80,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,1,9,17,18,20,21,22,23,24,25,26,51,66,68,73,80,],[3,14,27,33,34,35,36,37,38,40,41,42,65,77,78,79,82,]),'nums_with_cln':([28,32,],[46,46,]),'statement':([0,],[12,]),'vars_with_cln':([28,],[44,]),'expression':([0,],[11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','h_parser.py',21),
  ('statement -> VAR = term','statement',3,'p_statement_assign','h_parser.py',40),
  ('statement -> FUNC_VAR ( VAR ) = term','statement',6,'p_statement_def_func','h_parser.py',44),
  ('statement -> FUNC_VAR ( vars_with_cln ) = term','statement',6,'p_statement_def_func','h_parser.py',45),
  ('expression -> term','expression',1,'p_expression_term','h_parser.py',53),
  ('expression -> FUNC_VAR','expression',1,'p_expression_func','h_parser.py',57),
  ('term -> FUNC_VAR ( NUMBER )','term',4,'p_term_eval_func','h_parser.py',61),
  ('term -> FUNC_VAR ( nums_with_cln )','term',4,'p_term_eval_func','h_parser.py',62),
  ('term -> d / d VAR ( term )','term',7,'p_term_diff_func','h_parser.py',71),
  ('term -> d FUNC_VAR / d VAR','term',5,'p_term_diff_direct_func','h_parser.py',75),
  ('term -> S ( term d VAR )','term',6,'p_term_inte_func','h_parser.py',79),
  ('term -> S ( FUNC_VAR d VAR )','term',6,'p_term_inte_direct_func','h_parser.py',83),
  ('term -> BUILD_IN_FUNC ( term )','term',4,'p_term_build_in_func','h_parser.py',87),
  ('term -> CONSTANTS','term',1,'p_term_constants','h_parser.py',91),
  ('term -> term + term','term',3,'p_term_binop','h_parser.py',95),
  ('term -> term - term','term',3,'p_term_binop','h_parser.py',96),
  ('term -> term * term','term',3,'p_term_binop','h_parser.py',97),
  ('term -> term / term','term',3,'p_term_binop','h_parser.py',98),
  ('term -> term ^ term','term',3,'p_term_binop','h_parser.py',99),
  ('term -> - term','term',2,'p_term_uminus','h_parser.py',107),
  ('term -> ( term )','term',3,'p_term_group','h_parser.py',111),
  ('term -> NUMBER','term',1,'p_term_number','h_parser.py',115),
  ('term -> VAR','term',1,'p_term_var','h_parser.py',119),
  ('term -> term VAR','term',2,'p_term_var_multi','h_parser.py',123),
  ('term -> LIMIT_SYM [ term R_ARROW term ] ( term )','term',9,'p_term_limit','h_parser.py',127),
  ('vars_with_cln -> VAR , VAR','vars_with_cln',3,'p_expression_vars_with_cln','h_parser.py',131),
  ('vars_with_cln -> vars_with_cln , VAR','vars_with_cln',3,'p_expression_vars_with_cln','h_parser.py',132),
  ('nums_with_cln -> NUMBER , NUMBER','nums_with_cln',3,'p_expression_num_with_cln','h_parser.py',140),
  ('nums_with_cln -> nums_with_cln , NUMBER','nums_with_cln',3,'p_expression_num_with_cln','h_parser.py',141),
]
